//1
# mapper.py
#!/usr/bin/env python
import sys
import string

for line in sys.stdin:
    line = line.strip()
    words = line.split()
    for word in words:
        word = word.strip(string.punctuation).lower()
        print(f"{word}\t1")

# reducer.py
#!/usr/bin/env python
import sys

current_word = None
word_count = 0

for line in sys.stdin:
    line = line.strip()
    word, count = line.split("\t", 1)
    count = int(count)

    if current_word == word:
        word_count += count
    else:
        if current_word:
            print(f'"{current_word}"\t{word_count}')
        current_word = word
        word_count = count

if current_word:
    print(f'"{current_word}"\t{word_count}')



//2 
# mapper_stopwords.py
#!/usr/bin/env python
import sys
import string

stopwords = set(["the", "and", "of", "a", "to", "in", "is", "it"])

for line in sys.stdin:
    line = line.strip()
    words = line.split()
    for word in words:
        word = word.strip(string.punctuation).lower()
        if word not in stopwords:
            print(f"{word}\t1")

# reducer_stopwords.py
#!/usr/bin/env python
import sys

current_word = None
word_count = 0

for line in sys.stdin:
    line = line.strip()
    word, count = line.split("\t", 1)
    count = int(count)

    if current_word == word:
        word_count += count
    else:
        if current_word:
            print(f'"{current_word}"\t{word_count}')
        current_word = word
        word_count = count

if current_word:
    print(f'"{current_word}"\t{word_count}')

//3 

# mapper_bigrams.py
#!/usr/bin/env python
import sys
import string

for line in sys.stdin:
    line = line.strip()
    words = line.split()
    for i in range(len(words) - 1):
        bigram = f"{words[i]},{words[i + 1]}"
        print(f"{bigram}\t1")

# reducer_bigrams.py
#!/usr/bin/env python
import sys

current_bigram = None
bigram_count = 0

for line in sys.stdin:
    line = line.strip()
    bigram, count = line.split("\t", 1)
    count = int(count)

    if current_bigram == bigram:
        bigram_count += count
    else:
        if current_bigram:
            print(f'"{current_bigram}"\t{bigram_count}')
        current_bigram = bigram
        bigram_count = count

if current_bigram:
    print(f'"{current_bigram}"\t{bigram_count}')

